{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","options","self","this","date","moment","minDate","isValid","maxDate","dateFilter","angular","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","toDate","animating","noop","then","CalendarCtrl","weekDays","weekdaysMin","daysInMonth","getDaysInMonth","days","firstDay","day","arr","i","value","enabled","isDayEnabled","push","selectDate","dom","nextMonth","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","TimePickerCtrl","VIEW_HOURS","VIEW_MINUTES","currentView","time","clockHours","parseInt","format","clockMinutes","minutes","switchView","setAM","hour","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","hours","range","getPointerStyle","divider","type","degrees","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","init","module","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","provider","LABEL_OK","LABEL_CANCEL","setOKButtonLabel","label","setCancelButtonLabel","$get","datePicker","isDate","Date","now","isObject","show","controller","controllerAs","clickOutsideToClose","template","targetEvent","locals","directive","$animate","restrict","bindToController","link","scope","element","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","dateFormat","ngModel","defaultFormat","on","ev","preventDefault","$modelValue","selectedDate","$setViewValue","$render","replace","timepickerCtrl","$parent","timepicker","onEvent","event","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","e","off","$on","timePicker","$mdpTimePicker","timeFormat"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\n\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$mdIconProvider.icon(icon.id, icon.url);\n\t});\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$templateCache.put(icon.url, icon.svg);\n\t});\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\n/* global moment, angular */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    this.date = moment(currentDate);\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n    \n    // validate min and max date\n\tif (this.minDate && this.maxDate) {\n\t\tif (this.maxDate.isBefore(this.minDate)) {\n\t\t\tthis.maxDate = moment(this.minDate).add(1, 'days');\n\t\t}\n\t}\n\t\n\tif (this.date) {\n\t\t// check min date\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n\t\t\tthis.date = moment(this.minDate);\n    \t}\n    \t\n    \t// check max date\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n\t\t\tthis.date = moment(this.maxDate);\n    \t}\n\t}\n\t\n\tthis.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n        \tif(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n        \t\n        \treturn this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n\tthis.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n    \tvar date = this.date;\n    \t\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n    \t\tdate = moment(this.minDate);\n    \t}\n    \t\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n    \t\tdate = moment(this.maxDate);\n    \t}  \t\n    \t\n        $mdDialog.hide(date.toDate());\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\";\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(currentDate, options) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {};\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(\"ddd, MMM DD\") }}</span> ' +\n                                    '</md-toolbar>' + \n                                '</div>' +  \n                                '<div>' + \n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options\n                }\n            });\n        };\n    \n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n\tvar self = this;\n    this.weekDays = moment.weekdaysMin();\n    this.daysInMonth = [];\n    \n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day();\n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n \n        return arr;\n    };\n    \n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) && \n            (!this.maxDate || this.maxDate >= day) && \n            (!self.dateFilter || !self.dateFilter(day));\n    };\n    \n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n    \n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n    \n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    })\n    \n    self.updateDaysInMonth();\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a); \n            });\n                \n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\"\n        },\n        link: function(scope, element, attrs, ngModel) {\n            var dateFormat = scope.dateFormat || moment.defaultFormat;\n            if ('undefined' !== typeof attrs.type && ngModel) {\n                \n                angular.element(element).on(\"click\", function(ev) {\n                \tev.preventDefault();\n                \t\n                \t$mdpDatePicker(ngModel.$modelValue, {\n                \t    minDate: scope.minDate, \n                \t    maxDate: scope.maxDate,\n                \t    dateFilter: scope.dateFilter,\n                \t    targetEvent: ev\n            \t    }).then(function(selectedDate) {\n                \t\t$timeout(function() {\n                \t\t    switch(attrs.type) {\n                \t\t        case \"date\":\n                \t\t            ngModel.$setViewValue(moment(selectedDate).format(\"YYYY-MM-DD\"));\n                \t\t            break;\n            \t\t            default:\n            \t\t                ngModel.$setViewValue(moment(selectedDate).format(dateFormat));\n            \t\t                break;\n                \t\t    }\n                \t\t\t\n                \t\t\tngModel.$render(); \n                        });\n                      });\n                });\n            }\n        }\n    };\n}]);\n/* global moment, angular */\n\nfunction TimePickerCtrl($scope, $mdDialog, currentDate, $mdMedia) {\n\tvar self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentDate = currentDate;\n    this.currentView = this.VIEW_HOURS;\n    this.time = moment(self.currentDate);\n    \n    this.clockHours = parseInt(this.time.format(\"h\"));\n    this.clockMinutes = parseInt(this.time.minutes());\n    \n\t$scope.$mdMedia = $mdMedia;\n\t\n\tthis.switchView = function() {\n\t    self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n\t};\n    \n\tthis.setAM = function() {\n        if(self.time.format(\"A\") == \"PM\")\n            self.time.hour(self.time.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.time.format(\"A\") == \"AM\")\n            self.time.hour(self.time.hour() + 12);\n\t};\n    \n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    var self = this;\n    \n    this.STEP_DEG = 360 / 12;\n    this.steps = [];\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.setTime = function(time, type) {\n        this.selected = time;\n        \n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.time.format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n        \n    };\n    \n    this.init = function() {\n        self.type = self.type || \"hours\";\n        switch(self.type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = self.time.hours() || 0;\n                if(self.selected > 12) self.selected -= 12;\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n                \n                break;\n        }\n    };\n    \n    this.init();\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '='\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n                timepickerCtrl = scope.$parent.timepicker;\n            \n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if([\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            }; \n            \n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n            \n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\", onEvent);\n            });\n            \n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\";\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(currentDate, options) {\n            if(!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {};\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:' + \n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.format(\\'A\\') == \\'AM\\' }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.format(\\'A\\') == \\'PM\\' }\">PM</span>' +\n                                    '</div>' + \n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    \n                                    '<md-dialog-actions layout=\"row\">' +\n\t                                \t'<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate\n                }\n            });\n        };\n    \n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\"\n        },\n        link: function(scope, element, attrs, ngModel) {\n            var timeFormat = scope.timeFormat || \"HH:mm\";\n            if ('undefined' !== typeof attrs.type && ngModel) {\n                angular.element(element).on(\"click\", function(ev) {\n                    ev.preventDefault();\n                    $mdpTimePicker(ngModel.$modelValue, {\n                        targetEvent: ev\n                    }).then(function(selectedDate) {\n                        $timeout(function() { \n                            switch(attrs.type) {\n                \t\t        case \"time\":\n                        \t        ngModel.$setViewValue(moment(selectedDate).format(\"HH:mm\")); \n                        \t        break;\n                    \t        default:\n                    \t            ngModel.$setViewValue(moment(selectedDate).format(timeFormat));\n                    \t            break;\n                            }\n                        \tngModel.$render(); \n                        });\n                    });\n                });\n            }\n        }\n    };\n}]);\n\n})();"],"sourceRoot":"/source/"}